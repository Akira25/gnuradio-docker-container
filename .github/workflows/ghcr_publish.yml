#
name: Build and publish a Docker image to ghcr.io

on:
  release:
    types: [published]
  push:
    branches: [ "main", "test" ]
  pull_request:
    branches: [ "main", "test" ]

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./alpine/3.10/Dockerfile
            image: ghcr.io/akira25/gnuradio-docker-container
            context: ./alpine/3.10/
            # multiple tags for multiple registries:
            # https://docs.docker.com/build/ci/github-actions/push-multi-registries/
            tags: |
              akira25/gnuradio-docker-container:3.10-alpine
              akira25/gnuradio-docker-container:latest
              ghcr.io/akira25/gnuradio-docker-container:3.10-alpine
              ghcr.io/akira25/gnuradio-docker-container:latest
          #- dockerfile: ./debian/3.10/Dockerfile
          #  image: ghcr.io/akira25/gnuradio-docker-container
          #  context: ./debian/3.10/
          #  tags: |
          #    akira25/gnuradio-docker-container:3.10-debian
          #    ghcr.io/akira25/gnuradio-docker-container:3.10-debian
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          # platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ matrix.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-test-image:
    # generate a new demo image based on new base images
    runs-on: ubuntu-latest
    needs: build-and-push-image
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile
            image: ghcr.io/akira25/gnuradio-docker-container
            context: ./
            tags: |
              akira25/gnuradio-docker-container:test
              ghcr.io/akira25/gnuradio-docker-container:test
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          # platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ matrix.tags }}
          labels: ${{ steps.meta.outputs.labels }}
