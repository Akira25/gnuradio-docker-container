name: Build and publish a Docker image to ghcr.io and dockerhub

on:
  pull_request:
    branches: [ "main" ]

env:
  DHUB_REGISTRY: docker.io
  DHUB_REPO: ${{ github.repository }}
  GR_VERSION: "3.10"
  GHCR_REGISTRY: ghcr.io
  GHCR_REPO: ghcr.io/${{ github.repository }}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    name: Build Platform Image
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-latest
          - ubuntu-24.04-arm
        img:
          - alpine-3.10
          - debian-3.10
        include:
          - runner: ubuntu-latest
            platform: linux/amd64
          - runner: ubuntu-24.04-arm
            platform: linux/arm64
          - img: alpine-3.10
            base_os: alpine
            context: ./alpine/3.10/
            # multiple tags for multiple registries:
            # https://docs.docker.com/build/ci/github-actions/push-multi-registries/
            tags: |
              akira25/gnuradio-docker-container:3.10-alpine
              akira25/gnuradio-docker-container:latest
            #  ghcr.io/akira25/gnuradio-docker-container:3.10-alpine
            #  ghcr.io/akira25/gnuradio-docker-container:latest
          - img: debian-3.10
            base_os: debian
            context: ./debian/3.10/
            tags: |
              akira25/gnuradio-docker-container:3.10-debian

    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout Github code
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DHUB_REGISTRY }}/${{ env.DHUB_REPO }}

      - name: Build Platform Image
        id: build-platform
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/Dockerfile
          no-cache: true
          platforms: ${{ matrix.platform }}
          push: false
          provenance: false
          tags: |
            ${{ env.DHUB_REGISTRY }}/${{ env.DHUB_REPO }}:${{ env.GR_VERSION }}-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}-${{ matrix.base_os }}
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPO }}:${{ env.GR_VERSION }}-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}-${{ matrix.base_os }}
          labels: ${{ steps.meta.outputs.labels }}
